{"version":3,"sources":["contexts/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskFome.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children","Task","useContext","className","onClick","TaskList","length","TaskForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11d52cf7.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport { v1 as uuid } from \"uuid\";\r\nexport const TaskListContext = createContext()\r\nconst TaskListContextProvider = props => {\r\n        const initialState = JSON.parse(localStorage.getItem('tasks')) || []\r\n        const [tasks, setTasks] = useState(initialState)\r\n        useEffect(() => {\r\n            localStorage.setItem('tasks', JSON.stringify(tasks))\r\n        }, [tasks])\r\n        const [editItem, setEditItem] = useState(null)\r\n            // Add tasks\r\n        const addTask = title => {\r\n                setTasks([...tasks, { title, id: uuid() }])\r\n            }\r\n            // Remove tasks\r\n        const removeTask = id => {\r\n                setTasks(tasks.filter(task => task.id !== id))\r\n            }\r\n            // Clear tasks\r\n        const clearList = () => {\r\n                setTasks([])\r\n            }\r\n            // Find task\r\n        const findItem = id => {\r\n                const item = tasks.find(task => task.id === id)\r\n                setEditItem(item)\r\n            }\r\n            // Edit task\r\n        const editTask = (title, id) => {\r\n            const newTasks = tasks.map(task => (task.id === id ? { title, id } : task))\r\n            console.log(newTasks)\r\n            setTasks(newTasks)\r\n            setEditItem(null)\r\n        }\r\n        return ( < TaskListContext.Provider value = {\r\n                {\r\n                    tasks,\r\n                    addTask,\r\n                    removeTask,\r\n                    clearList,\r\n                    findItem,\r\n                    editTask,\r\n                    editItem\r\n                }\r\n            } > { props.children } </TaskListContext.Provider>)\r\n        }\r\n        export default TaskListContextProvider","import React, { useContext } from 'react'\r\nimport { TaskListContext } from '../contexts/TaskListContext'\r\nconst Task = ({ task }) => {\r\n    const { removeTask, findItem } = useContext(TaskListContext)\r\n    return (\r\n        <li className=\"list-item\">\r\n             <span> {task.title} \r\n             </span>\r\n        <div>\r\n            <button className=\"btn-delete task-btn\" onClick={() => removeTask(task.id)}>\r\n                <i  className=\"fas fa-trash-alt\"></i>\r\n            </button> {''}   \r\n            <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\r\n                <i className=\"fas fa-pen\">    \r\n                </i>\r\n            </button>\r\n          </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../contexts/TaskListContext\";\r\nimport Task from \"./Task\";\r\nconst TaskList = () => {\r\n    const { tasks } = useContext(TaskListContext);\r\n    return ( <div> {\r\n        tasks.length ? ( <ul className = \"list\" > {\r\n            tasks.map(task => {\r\n                return <Task task = { task }\r\n                key = { task.id }\r\n                />;\r\n            })\r\n        } </ul>) : ( <div className = \"no-tasks\" > No Tasks </div>)\r\n    } </div>);\r\n};\r\nexport default TaskList;","import React, { useState, useContext, useEffect } from 'react'\r\nimport { TaskListContext } from '../contexts/TaskListContext'\r\nconst TaskForm = () => {\r\n    const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\r\n    const [title, setTitle] = useState('')\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (!editItem) {\r\n            addTask(title)\r\n            setTitle('')\r\n        } else {\r\n            editTask(title, editItem.id)\r\n        }\r\n    }\r\n    const handleChange = e => {\r\n        setTitle(e.target.value)\r\n    }\r\n    useEffect(() => {\r\n        if (editItem) {\r\n            setTitle(editItem.title)\r\n            console.log(editItem)\r\n        } else {\r\n            setTitle('')\r\n        }\r\n    }, [editItem])\r\n    return ( < form onSubmit = { handleSubmit }\r\n        className = \"form\" > < input type = \"text\"\r\n        placeholder = \"Add Task...\"\r\n        value = { title }\r\n        onChange = { handleChange }\r\n        required className = \"task-input\" /> \r\n        <div className = \"buttons\" > \r\n        < button type = \"submit\"\r\n        className = \"btn add-task-btn\" >\r\n             { editItem ? 'Edit Task' : 'Add Task' } </button> <button className = \"btn clear-btn\"\r\n        onClick = { clearList } > Clear </button> </div> </form>)\r\n}\r\nexport default TaskForm;","import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>\r\n                Task Manager\r\n                </h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react'\r\nimport '../App.css';\r\nimport TaskList from \"./TaskList\";\r\nimport TaskListContextProvider from \"../contexts/TaskListContext\";\r\nimport TaskForm from './TaskFome';\r\nimport Header from \"./Header\";\r\nconst App = () => {\r\n    return ( \r\n        <TaskListContextProvider>\r\n        <div className=\"container\">\r\n            <div className=\"app-wrapper\">\r\n                <div className=\"main\">\r\n                    <Header />\r\n                    <TaskForm />\r\n                    <TaskList /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </TaskListContextProvider>\r\n    );\r\n};\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}